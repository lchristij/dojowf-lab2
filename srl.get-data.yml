---
- hosts: "srl"
  gather_facts: false
  # connection: "sr_cli"
  connection: "network_cli"
  ansible_network_os: community.network.nos

  # vars:
    # cli:
      # transport: sr_cli
    # ansible_ssh_user: linuxadmin
    # ansible_ssh_pass: NokiaSrl1!
    # anssible_ssh_common_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    # ansible_network_os: community.network.nos
    # ansible_network_os: community.network.sros
    # ansible_host_key_auto_add: yes
    # ansible_host_key_checking: False


  tasks:
    # - name: "VALIDATE DEVICES ARE REACHABLE"
    #   ansible.builtin.ping:
    #   register: "ping"

    # - name: "VIEW OUTPUT OF PING"
    #   ansible.builtin.debug:
    #     var: "ping"

    # - name: "SHOW VERSION"
    #   ansible.utils.cli_parse:
    #     command: "show version"
    #     parser:
    #       name: "ansible.netcommon.ntc_templates"
    #   register: "version_result"

    # - name: "{{ inventory_hostname | upper }} OS VERSION"
    #   ansible.builtin.debug:
    #     msg: "{{ version_result['parsed'][0]['image'] }}"

    - name: "run show version on remote device"
      # community.network.sros_command:
      community.network.nos_command:
        commands: "show version"
        # provider: "{{ cli }}"
      # register: "version_result"
      # register: "show_ver"
      # when: ansible_network_os == 'community.network.sros'
      # when: ansible_network_os == 'community.network.nos'

    # - name: "{{ inventory_hostname | upper }} OS VERSION"
    #   ansible.builtin.debug:
    #     msg: "{{ version_result['parsed'][0]['image'] }}"

    # - name: "RUN SHOW COMMAND"
    #   cli_command:
    #     command: "{{ commands['show_interfaces'] }}"
    #   register: "show_interfaces"

    # - name: "VIEW OUTPUT OF SHOW COMMAND"
    #   ansible.builtin.debug:
    #     var: "show_interfaces.stdout_lines"